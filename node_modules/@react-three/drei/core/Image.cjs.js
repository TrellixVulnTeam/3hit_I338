"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/extends"),r=require("react"),n=require("@react-three/fiber"),t=require("./shaderMaterial.cjs.js"),a=require("./useTexture.cjs.js");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function i(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var t=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,t.get?t:{enumerable:!0,get:function(){return e[n]}})}})),r.default=e,Object.freeze(r)}require("three");var s=o(e),c=i(r);const u=t.shaderMaterial({planeBounds:[1,1],imageBounds:[1,1],map:null,zoom:1,grayscale:0},"\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n","\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 planeBounds;\n  uniform vec2 imageBounds;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n\n  void main() {\n    vec2 s = planeBounds;\n    vec2 i = imageBounds;\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv), grayscale);\n  }\n");function l(e,r){const n=[e,r],t=Math.min(...n);return[n[0]/t,n[1]/t]}const v=c.forwardRef((({segments:e=1,scale:r=1,zoom:t=1,grayscale:o=0,url:i,...v},m)=>{n.extend({ImageMaterial:u});const f=a.useTexture(i),d=c.useMemo((()=>l(...Array.isArray(r)?[r[0],r[1]]:[r,r])),[r]),g=c.useMemo((()=>l(f.image.width,f.image.height)),[f]);return c.createElement("mesh",s.default({ref:m,scale:r},v),c.createElement("planeGeometry",{args:[1,1,e,e]}),c.createElement("imageMaterial",{map:f,zoom:t,grayscale:o,planeBounds:d,imageBounds:g}))}));exports.Image=v;
